name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run check

    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/test
        JWT_SECRET: test-secret-key-for-testing
        PAYSTACK_SECRET_KEY: sk_test_placeholder
        PAYSTACK_PUBLIC_KEY: pk_test_placeholder

    - name: Run AI tests
      run: npm run test:ai
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/test
        JWT_SECRET: test-secret-key-for-testing
        PAYSTACK_SECRET_KEY: sk_test_placeholder
        PAYSTACK_PUBLIC_KEY: pk_test_placeholder

    - name: Build application
      run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}