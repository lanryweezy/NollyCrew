{"timestamp":"2025-10-02T16:36:32.400Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T16:36:32.415Z","level":"info","message":"User registered successfully","meta":{"userId":"1","email":"test@example.com"}}
{"timestamp":"2025-10-02T16:36:32.421Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T16:36:32.429Z","level":"info","message":"User logged in successfully","meta":{"email":"test@example.com"}}
{"timestamp":"2025-10-02T16:36:32.438Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:13:31.321Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:13:31.365Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:13:31.367Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:13:31.394Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:13:31.401Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:13:31.415Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:13:31.429Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:20.641Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:20.770Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:17:20.930Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:21.025Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:21.228Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:21.347Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:21.360Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:54.093Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:54.156Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:17:54.175Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:54.175Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:54.202Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:54.207Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:54.235Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:17:54.777Z","level":"info","message":"User logged in successfully","meta":{"email":"test@example.com"}}
{"timestamp":"2025-10-02T12:17:54.797Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:18:06.120Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:06.159Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:18:06.178Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:06.178Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:06.202Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:06.209Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:06.222Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:06.548Z","level":"info","message":"User logged in successfully","meta":{"email":"test@example.com"}}
{"timestamp":"2025-10-02T12:18:06.588Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:18:42.504Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:42.526Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:18:42.553Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:42.570Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:42.613Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:42.643Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:42.663Z","level":"warn","message":"Invalid token attempt","meta":{"error":"jwt malformed"}}
{"timestamp":"2025-10-02T12:18:42.868Z","level":"info","message":"User logged in successfully","meta":{"email":"test@example.com"}}
{"timestamp":"2025-10-02T12:18:42.904Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:28:18.390Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:28:18.596Z","level":"info","message":"User registered successfully","meta":{"userId":"1","email":"test@example.com"}}
{"timestamp":"2025-10-02T12:28:18.620Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T12:28:19.001Z","level":"info","message":"User logged in successfully","meta":{"email":"test@example.com"}}
{"timestamp":"2025-10-02T12:28:19.020Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:31:05.084Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:31:05.116Z","level":"error","message":"Registration error","meta":{"error":"[vitest] No \"sign\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:31:05.135Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T12:31:05.142Z","level":"warn","message":"Login attempt with invalid password","meta":{"email":"test@example.com"}}
{"timestamp":"2025-10-02T12:31:05.151Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:31:28.746Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:31:28.773Z","level":"error","message":"Registration error","meta":{"error":"[vitest] No \"sign\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:31:28.799Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T12:31:28.810Z","level":"warn","message":"Login attempt with invalid password","meta":{"email":"test@example.com"}}
{"timestamp":"2025-10-02T12:31:28.822Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:31:56.241Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:31:56.295Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:31:56.335Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:31:58.742Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:31:58.773Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:31:58.781Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:32:16.549Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:32:16.562Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:32:16.576Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:32:21.019Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:32:21.032Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:32:21.042Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:35:15.628Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:35:15.631Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:35:15.655Z","level":"error","message":"Registration error","meta":{"error":"[vitest] No \"sign\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:35:15.673Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:35:15.676Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:35:15.678Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T12:35:15.686Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:35:15.686Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:35:15.686Z","level":"warn","message":"Login attempt with invalid password","meta":{"email":"test@example.com"}}
{"timestamp":"2025-10-02T12:35:15.696Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:35:15.697Z","level":"warn","message":"Invalid token attempt","meta":{"error":"[vitest] No \"verify\" export is defined on the \"jsonwebtoken\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:38:47.307Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:38:47.350Z","level":"error","message":"Registration error","meta":{"error":"[vitest] No \"default\" export is defined on the \"bcryptjs\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:38:47.389Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T12:38:47.409Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:39:35.660Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:39:35.685Z","level":"error","message":"Registration error","meta":{"error":"[vitest] No \"default\" export is defined on the \"bcryptjs\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:39:35.701Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T12:39:35.713Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:39:38.826Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:39:38.852Z","level":"error","message":"Registration error","meta":{"error":"[vitest] No \"default\" export is defined on the \"bcryptjs\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:39:38.871Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T12:39:38.880Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:40:32.048Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:40:32.076Z","level":"error","message":"Registration error","meta":{"error":"[vitest] No \"default\" export is defined on the \"bcryptjs\" mock. Did you forget to return it from \"vi.mock\"?\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\n"}}
{"timestamp":"2025-10-02T12:40:32.092Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T12:40:32.103Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:46:18.058Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:46:18.251Z","level":"info","message":"User registered successfully","meta":{"userId":"1","email":"test@example.com"}}
{"timestamp":"2025-10-02T12:46:18.264Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T12:46:18.463Z","level":"info","message":"User logged in successfully","meta":{"email":"test@example.com"}}
{"timestamp":"2025-10-02T12:46:18.488Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T12:48:39.320Z","level":"error","message":"Registration error","meta":{"error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"email\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"firstName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"lastName\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"password\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}
{"timestamp":"2025-10-02T12:48:39.440Z","level":"info","message":"User registered successfully","meta":{"userId":"1","email":"test@example.com"}}
{"timestamp":"2025-10-02T12:48:39.453Z","level":"warn","message":"Registration attempt with existing email","meta":{"email":"existing@example.com"}}
{"timestamp":"2025-10-02T12:48:39.612Z","level":"info","message":"User logged in successfully","meta":{"email":"test@example.com"}}
{"timestamp":"2025-10-02T12:48:39.627Z","level":"warn","message":"Login attempt with non-existent email","meta":{"email":"wrong@example.com"}}
{"timestamp":"2025-10-02T15:37:35.682Z","level":"info","message":"Server started on port 3000"}
